// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace FinanceControl.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240812021209_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Заработная плата с работы",
                            Name = "Salary",
                            Type = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Из зарплаты отдать папе",
                            Name = "Give Money to Dad",
                            Type = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Из зарплаты отдать маме",
                            Name = "Give Money to mom",
                            Type = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Кредит",
                            Name = "Credit",
                            Type = 2
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Фриланс",
                            Name = "Freelance",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            ExpenseId = 1,
                            Amount = 1411800m,
                            CategoryId = 4,
                            Date = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(6090),
                            Description = "Кредит",
                            UserId = 1
                        },
                        new
                        {
                            ExpenseId = 2,
                            Amount = 700000m,
                            CategoryId = 3,
                            Date = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(6092),
                            Description = "Маме",
                            UserId = 1
                        },
                        new
                        {
                            ExpenseId = 3,
                            Amount = 200000m,
                            CategoryId = 2,
                            Date = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(6093),
                            Description = "Папе",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.Income", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncomeId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IncomeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");

                    b.HasData(
                        new
                        {
                            IncomeId = 1,
                            Amount = 5000000m,
                            CategoryId = 1,
                            Date = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(6052),
                            Description = "Зарплата с работы 5 млн сум",
                            UserId = 1
                        },
                        new
                        {
                            IncomeId = 2,
                            Amount = 19000000m,
                            CategoryId = 1,
                            Date = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(6054),
                            Description = "Зарплата с работы 19 млн сум",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateRegister = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(5943),
                            Password = "P_Test",
                            UserName = "U_Test"
                        },
                        new
                        {
                            UserId = 2,
                            DateRegister = new DateTime(2024, 8, 12, 5, 12, 9, 409, DateTimeKind.Local).AddTicks(5952),
                            Password = "P_Vata",
                            UserName = "Vata"
                        });
                });

            modelBuilder.Entity("Entities.Models.Expense", b =>
                {
                    b.HasOne("Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Models.Income", b =>
                {
                    b.HasOne("Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
